workflows:
  expo-ios-development:
    name: Expo iOS Development Build
    instance_type: mac_mini_m2
    working_directory: .
    environment:
      vars:
        XCODE_WORKSPACE: "ios/simple-ios-todo.xcworkspace"
        XCODE_SCHEME: "simple-ios-todo"
        BUNDLE_ID: "com.anonymous.simpleiostodo"
        BUILD_NUMBER: "1"
      node: 20
      xcode: 15.0
      cocoapods: default

    cache:
      cache_paths:
        - ~/Library/Caches/CocoaPods
        - ios/Pods
        - node_modules
        - .yarn/cache
        - .yarn/install-state.gz
        - .yarn/unplugged

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "master*"
          include: true
          source: true

    scripts:
      - name: Setup Environment
        script: |
          echo "--- Node version ---"
          node -v
          echo "--- Yarn version ---"
          yarn -v
          echo "--- npm version ---"
          npm -v
          echo "--- Xcode version ---"
          xcodebuild -version
          echo "--- CocoaPods version ---"
          pod --version

      - name: Install Dependencies
        script: |
          echo "--- Cleaning npm cache ---"
          npm cache clean --force
          echo "--- Installing Yarn dependencies ---"
          yarn install --network-timeout 600000 --ignore-engines

      - name: Setup EAS CLI
        script: |
          echo "--- Installing EAS CLI ---"
          npm install -g eas-cli@latest --no-audit --fund=false --omit=optional
          echo "--- EAS CLI version ---"
          npx eas-cli --version

      - name: Expo Prebuild
        script: |
          echo "--- Generating iOS Native Code ---"
          npx expo prebuild --platform ios --non-interactive
          echo "--- Prebuild contents verification ---"
          ls -la ios/

      - name: Install CocoaPods
        script: |
          echo "--- Installing Pods ---"
          cd ios
          pod install --repo-update --verbose
          cd ..
          echo "--- Pods directory contents ---"
          ls -la ios/Pods/

      - name: Build Development Version
        script: |
          echo "--- Building Development Version ---"
          set -o pipefail && xcodebuild \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Debug \
            -destination 'generic/platform=iOS' \
            -quiet \
            CODE_SIGNING_ALLOWED=NO \
            COMPILER_INDEX_STORE_ENABLE=NO \
            | xcpretty

          # Alternative approach if the above fails
          echo "--- Fallback: Detailed build logs ---"
          xcodebuild \
            -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -configuration Debug \
            -destination 'generic/platform=iOS' \
            CODE_SIGNING_ALLOWED=NO \
            | tee xcodebuild.log

          # Save the full build logs as artifact
          mkdir -p build_logs
          mv xcodebuild.log build_logs/

    artifacts:
      - build_logs/xcodebuild.log
      - ios/build/**/*.log
      - ios

    publishing:
      email:
        recipients:
          - webdev.faizanali@gmail.com
      slack:
        channel: "#build-notifications"