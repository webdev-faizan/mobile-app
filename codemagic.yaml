workflows:
  expo-ios-release:
    name: Expo iOS Release Build
    instance_type: mac_mini_m2
    working_directory: .

    environment:
      vars:
        RCT_NO_LAUNCH_PACKAGER: "true"
        RCT_METRO_PORT: "8081"
        CI: "1"                      # ensures Expo prebuild is non-interactive
        BUILD_NUMBER: "1"
      node: 20
      java: 17

    cache:
      cache_paths:
        - node_modules
        - .yarn/cache
        - .yarn/install-state.gz
        - .yarn/unplugged
        - ios/Pods
        - ios/Podfile.lock

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "master*"
          include: true
          source: true

    scripts:

      # ────────────────────────────────────────────────────────────────
      # 1) Environment Setup
      # ────────────────────────────────────────────────────────────────
      - name: Environment Setup
        script: |
          echo "--- System Information ---"
          sw_vers
          echo "--- Node $(node -v) ---"
          echo "--- Yarn $(yarn -v) ---"
          echo "--- Xcode $(xcodebuild -version | head -n 1) ---"
          echo "--- Ruby $(ruby -v) ---"
          echo "--- CocoaPods $(pod --version) ---"

      # ────────────────────────────────────────────────────────────────
      # 2) Clean Workspace (Pods, DerivedData, etc.)
      # ────────────────────────────────────────────────────────────────
      - name: Clean Workspace
        script: |
          echo "--- Cleaning previous iOS build artifacts ---"
          cd ios
          rm -rf Pods Podfile.lock build DerivedData
          pod deintegrate || true
          cd ..

      # ────────────────────────────────────────────────────────────────
      # 3) Install JS Dependencies + CocoaPods
      # ────────────────────────────────────────────────────────────────
      - name: Install Dependencies
        script: |
          echo "--- Installing JS dependencies (yarn) ---"
          yarn install --network-timeout 600000 --ignore-engines

          echo "--- Installing CocoaPods dependencies ---"
          cd ios

          # 3a) clear Boost (and all) from CocoaPods cache to avoid checksum mismatch
          pod cache clean boost --all || true
          pod cache clean --all || true

          # 3b) force a fresh repo update, then install
          pod repo update
          pod install --repo-update --clean-install

          # 3c) check workspace existence (pod install should have generated .xcworkspace)
          if [ -d "simpleiostodo.xcworkspace" ]; then
            echo "✅ CocoaPods workspace created: simpleiostodo.xcworkspace"
          else
            echo "❗ WARNING: no .xcworkspace found, proceeding with .xcodeproj"
          fi
          cd ..

      # ────────────────────────────────────────────────────────────────
      # 4) Expo Prebuild → generate iOS/Android native projects
      # ────────────────────────────────────────────────────────────────
      - name: Expo Prebuild (iOS)
        script: |
          echo "--- Generating iOS native code from Expo config ---"
          npx expo prebuild --platform ios
          echo "--- Prebuild finished, listing ios/ folder: ---"
          ls -la ios/

      # ────────────────────────────────────────────────────────────────
      # 5) Archive (Release) + Export IPA
      # ────────────────────────────────────────────────────────────────
      - name: Archive & Export IPA (App Store-ready)
        script: |
          echo "--- Starting Xcode archive for Release build ---"
          cd ios

          if [ -d "simpleiostodo.xcworkspace" ]; then
            BUILD_TARGET="-workspace simpleiostodo.xcworkspace"
          else
            BUILD_TARGET="-project simpleiostodo.xcodeproj"
          fi

          echo "--- Xcodebuild archive command: xcodebuild $BUILD_TARGET -scheme simpleiostodo ---"
          set -o pipefail && xcodebuild \
            $BUILD_TARGET \
            -scheme simpleiostodo \
            -configuration Release \
            -sdk iphoneos \
            -UseModernBuildSystem=YES \
            -derivedDataPath build \
            archive \
            -archivePath build/simpleiostodo.xcarchive \
            | tee build/xcode_archive.log

          echo "--- Exporting .xcarchive to .ipa using ExportOptions.plist ---"
          xcodebuild \
            -exportArchive \
            -archivePath build/simpleiostodo.xcarchive \
            -exportOptionsPlist ../ExportOptions.plist \
            -exportPath build \
            | tee build/xcode_export.log

          echo "--- Contents of build/ after export: ---"
          ls -la build/
          cd ..

      # ────────────────────────────────────────────────────────────────
      # 6) (Optional) Run unit tests or post-build checks
      # ────────────────────────────────────────────────────────────────
      # - name: Run iOS Tests
      #   script: |
      #     cd ios
      #     xcodebuild test \
      #       -workspace simpleiostodo.xcworkspace \
      #       -scheme simpleiostodo \
      #       -sdk iphonesimulator \
      #       -destination 'platform=iOS Simulator,name=iPhone 14' \
      #       -derivedDataPath build \
      #       | tee build/xcode_test.log
      #     cd ..

    artifacts:
      - ios/build/*.ipa
      - ios/build/Payload
      - ios/build/xcode_export.log
      - ios/build/xcode_archive.log
      - ios/Podfile.lock

    publishing:
      email:
        recipients:
          - webdev.faizanali@gmail.com
      slack:
        channel: "#build-notifications"
