workflows:
  expo-ios-development:
    name: Expo iOS Development Build
    instance_type: mac_mini_m2
    working_directory: .
    environment:
      vars:
        BUILD_NUMBER: "1"
      node: 20
      java: 17

    cache:
      cache_paths:
        - node_modules
        - .yarn/cache
        - .yarn/install-state.gz
        - .yarn/unplugged

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "master*"
          include: true
          source: true

    scripts:
      - name: Setup Environment
        script: |
          echo "--- Node version ---"
          node -v
          echo "--- Yarn version ---"
          yarn -v
          echo "--- npm version ---"
          npm -v
          echo "--- Xcode version ---"
          xcodebuild -version
          echo "--- Ruby version ---"
          ruby -v
          echo "--- CocoaPods version ---"
          pod --version

      - name: Install Dependencies
        script: |
          echo "--- Cleaning npm cache ---"
          npm cache clean --force
          echo "--- Installing Yarn dependencies ---"
          yarn install --network-timeout 600000 --ignore-engines
          echo "--- Installing CocoaPods dependencies ---"
          cd ios
          pod install --repo-update
          cd ..

      - name: Setup EAS CLI
        script: |
          echo "--- Installing EAS CLI ---"
          npm install -g eas-cli@latest --no-audit --fund=false --omit=optional
          echo "--- EAS CLI version ---"
          npx eas-cli --version

      - name: Expo Prebuild for iOS
        script: |
          echo "--- Generating iOS Native Code ---"
          npx expo prebuild --platform ios --non-interactive
          echo "--- Prebuild contents verification ---"
          ls -la ios/

      - name: Build iOS Development Archive
        script: |
          echo "--- Building iOS Development Archive ---"
          cd ios

          # Detect actual project/workspace and scheme
          WORKSPACE=$(ls *.xcworkspace 2>/dev/null | head -n 1)
          PROJECT=$(ls *.xcodeproj 2>/dev/null | head -n 1)

          if [ -n "$WORKSPACE" ]; then
            SCHEME=$(basename "$WORKSPACE" .xcworkspace)
            echo "Found workspace: $WORKSPACE"
            echo "Detected scheme: $SCHEME"
            xcodebuild -workspace "$WORKSPACE" \
              -scheme "$SCHEME" \
              -configuration Debug \
              -sdk iphonesimulator \
              -derivedDataPath build \
              clean build
          elif [ -n "$PROJECT" ]; then
            SCHEME=$(basename "$PROJECT" .xcodeproj)
            echo "Found project: $PROJECT"
            echo "Detected scheme: $SCHEME"
            xcodebuild -project "$PROJECT" \
              -scheme "$SCHEME" \
              -configuration Debug \
              -sdk iphonesimulator \
              -derivedDataPath build \
              clean build
          else
            echo "‚ùå No .xcworkspace or .xcodeproj found!"
            exit 1
          fi

          cd ..
          echo "--- iOS Build Complete ---"

    artifacts:
      - ios/build/**/*.xcarchive
      - ios/build/**/*.log

    publishing:
      email:
        recipients:
          - webdev.faizanali@gmail.com
      slack:
        channel: "#build-notifications"
