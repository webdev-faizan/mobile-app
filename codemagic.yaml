workflows:
  maui-ios-build:
    name: .NET MAUI iOS Build
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      xcode: latest
      vars:
        DOTNET_PATH: $CM_BUILD_DIR/dotnet
        DOTNET: $CM_BUILD_DIR/dotnet/dotnet
        PATH: $CM_BUILD_DIR/dotnet:$PATH

    scripts:
      # Initial setup
      - name: Show environment info
        script: |
          echo "Build directory: $CM_BUILD_DIR"
          echo "Working directory: $(pwd)"
          echo "Directory contents:"
          ls -la

      # .NET SDK installation
      - name: Install .NET 7 SDK
        script: |
          wget https://dot.net/v1/dotnet-install.sh
          chmod +x dotnet-install.sh
          ./dotnet-install.sh --channel 7.0 --install-dir $DOTNET_PATH
          $DOTNET --version

      # MAUI workload installation
      - name: Install MAUI workloads
        script: |
          $DOTNET workload install maui \
            --source "https://aka.ms/dotnet7/nuget/index.json" \
            --source "https://api.nuget.org/v3/index.json"
          $DOTNET workload list

      # Project build
      - name: Build MAUI iOS app
        script: |
          # Create artifacts directory
          mkdir -p artifacts
          
          # Find and build the MAUI project
          if [ -f "*.sln" ]; then
            echo "Building solution file..."
            $DOTNET build *.sln -f net7.0-ios -c Debug -p:BuildIpa=true -o ./artifacts
          elif [ -f "MauiApp/*.csproj" ]; then
            echo "Building MAUI project..."
            cd MauiApp
            $DOTNET build -f net7.0-ios -c Debug -p:BuildIpa=true -o ../artifacts
          else
            echo "ERROR: No MAUI project found!"
            echo "Looking for:"
            echo "- Any .sln file in root"
            echo "- MauiApp/*.csproj"
            echo "Current contents:"
            ls -la
            exit 1
          fi

          # Verify build output
          echo "Build artifacts:"
          find artifacts -type f

    artifacts:
      - ./artifacts/**/*.app
      - ./artifacts/**/*.ipa
      - ./artifacts/**/*.dll
      - ./artifacts/**/*.pdb

    publishing:
      scripts:
        - name: Verify iOS app bundle
          script: |
            if find artifacts -name "*.app" | grep -q .; then
              echo "iOS app bundle found:"
              find artifacts -name "*.app"
            else
              echo "ERROR: No .app bundle found in artifacts!"
              exit 1
            fi