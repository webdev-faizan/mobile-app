version: 1.0
workflows:
  expo-ios-build:
    name: Expo iOS Build
    instance_type: mac_mini_m2
    working_directory: .
    
    environment:
      node: 20
      xcode: 15.0
      cocoapods: default
    
    cache:
      cache_paths:
        - node_modules
        - .expo
        - ios/Pods
    
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "main"
          include: true
          source: true
    
    scripts:
      - name: Install Dependencies
        script: |
          echo "--- Installing dependencies ---"
          npm install -g yarn@latest
          yarn install --frozen-lockfile
          npm install -g @expo/cli@latest
      
      - name: Expo Prebuild
        script: |
          echo "--- Running expo prebuild ---"
          npx expo prebuild --platform ios --clean
          
          # Verify prebuild output
          if [ ! -d "ios" ]; then
            echo "❌ iOS folder not created by prebuild"
            exit 1
          fi
      
      - name: Install CocoaPods
        script: |
          echo "--- Installing pods ---"
          cd ios
          pod install --repo-update
          cd ..
      
      - name: Build for Simulator
        script: |
          echo "--- Building for iOS Simulator ---"
          xcodebuild build \
            -workspace ios/YourApp.xcworkspace \
            -scheme YourApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.0' \
            CODE_SIGNING_ALLOWED=NO \
            | tee xcodebuild.log
          
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "❌ Simulator build failed"
            exit 1
          fi
      
      - name: Build for Device
        script: |
          echo "--- Building for iOS Device ---"
          cat > ios/ExportOptions.plist << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>method</key>
    <string>development</string>
    <key>teamID</key>
    <string></string>
    <key>compileBitcode</key>
    <false/>
    <key>uploadBitcode</key>
    <false/>
    <key>uploadSymbols</key>
    <false/>
</dict>
</plist>
EOF
          
          xcodebuild archive \
            -workspace ios/YourApp.xcworkspace \
            -scheme YourApp \
            -configuration Release \
            -archivePath build/YourApp.xcarchive \
            CODE_SIGNING_ALLOWED=NO
          
          xcodebuild -exportArchive \
            -archivePath build/YourApp.xcarchive \
            -exportOptionsPlist ios/ExportOptions.plist \
            -exportPath build
      
      - name: Package Artifacts
        script: |
          echo "--- Packaging artifacts ---"
          mkdir -p artifacts
          
          # Find simulator app
          SIMAPP=$(find ios/build -name "*.app" -type d | head -1)
          if [ -n "$SIMAPP" ]; then
            tar -czf artifacts/simulator-build.tar.gz -C $(dirname $SIMAPP) $(basename $SIMAPP)
          fi
          
          # Package IPA if exists
          if [ -f "build/YourApp.ipa" ]; then
            cp build/YourApp.ipa artifacts/
          fi
          
          # Package logs
          cp xcodebuild.log artifacts/
    
    artifacts:
      - artifacts/*
    
    publishing:
      email:
        on_success: always
        on_failure: always
        recipients:
          - your-email@example.com