workflows:
  expo-ios-development:
    name: Expo iOS Development Build
    instance_type: mac_mini_m2
    working_directory: .
    environment:
      vars:
        BUILD_NUMBER: "1"
      node: 20
      java: 17

    cache:
      cache_paths:
        - node_modules
        - .yarn/cache
        - .yarn/install-state.gz
        - .yarn/unplugged

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "master*"
          include: true
          source: true

    scripts:
      - name: Setup Environment
        script: |
          echo "--- System Setup ---"
          echo "Node version: $(node -v)"
          echo "Yarn version: $(yarn -v)"
          echo "npm version: $(npm -v)"
          echo "Xcode version: $(xcodebuild -version)"
          echo "Ruby version: $(ruby -v)"
          echo "CocoaPods version: $(pod --version)"

      - name: Install Dependencies
        script: |
          echo "--- Cleaning npm cache ---"
          npm cache clean --force
          echo "--- Installing Yarn dependencies ---"
          yarn install --network-timeout 600000 --ignore-engines
          echo "--- Installing CocoaPods dependencies ---"
          cd ios
          pod install --repo-update
          cd ..

      - name: Setup EAS CLI
        script: |
          echo "--- Installing EAS CLI ---"
          npm install -g eas-cli@latest --no-audit --fund=false --omit=optional
          echo "--- EAS CLI version ---"
          npx eas-cli --version

      - name: Expo Prebuild for iOS
        script: |
          echo "--- Generating iOS Native Code ---"
          npx expo prebuild --platform ios --non-interactive
          echo "--- Prebuild contents verification ---"
          ls -la ios/

      - name: Build iOS App
        script: |
          echo "--- Building iOS App ---"
          cd ios

          # Find the first workspace or project
          XCODE_PROJ=$(find . -maxdepth 1 \( -name '*.xcworkspace' -o -name '*.xcodeproj' \) -print -quit)

          if [ -z "$XCODE_PROJ" ]; then
            echo "‚ùå Error: No Xcode project found!"
            ls -la
            exit 1
          fi

          echo "Found Xcode project: $XCODE_PROJ"

          # Build without specifying scheme
          xcodebuild \
            -configuration Debug \
            -sdk iphonesimulator \
            -derivedDataPath build \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            clean build

          echo "--- Build products ---"
          find build -type d -name "*.app" -exec du -sh {} \;
          echo "--- iOS Build Complete ---"
          cd ..

    artifacts:
      - ios/build/**/*.app
      - ios/build/**/*.dSYM
      - ios/build/**/*.log

    publishing:
      email:
        recipients:
          - webdev.faizanali@gmail.com
      slack:
        channel: "#build-notifications"