workflows:
  expo-multi-platform-build:
    name: Expo Multi-Platform Build
    instance_type: mac_mini_m2
    working_directory: .
    environment:
      vars:
        BUNDLE_ID: "com.anonymous.simpleiostodo"
        BUILD_NUMBER: "1"
        ANDROID_PROJECT_DIR: "android"
        ANDROID_BUILD_TYPE: "Debug"
        XCODE_PROJECT: "ios/simpleiostodo.xcodeproj"
        XCODE_SCHEME: "simpleiostodo"
      node: 20
      xcode: 15.0

    cache:
      cache_paths:
        - node_modules
        - .yarn/cache
        - .yarn/install-state.gz
        - .yarn/unplugged
        - android/.gradle
        - $HOME/.gradle/caches

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "master*"
          include: true
          source: true

    scripts:
      - name: Setup Environment
        script: |
          echo "--- Environment Setup ---"
          node -v
          yarn -v
          npm -v
          xcodebuild -version

      - name: Install Dependencies
        script: |
          echo "--- Installing Dependencies ---"
          npm cache clean --force
          yarn install --network-timeout 600000 --ignore-engines

      - name: Setup EAS CLI
        script: |
          echo "--- Installing EAS CLI ---"
          npm install -g eas-cli@latest
          npx eas-cli --version

      - name: Generate Native Code
        script: |
          echo "--- Generating Native Projects ---"
          CI=1 npx expo prebuild --platform all --clean
          
          echo "--- Verifying generated files ---"
          ls -la ios/
          ls -la android/

      - name: Build iOS (Direct)
        script: |
          echo "--- Building iOS Project Directly ---"
          mkdir -p build_logs/ios
          
          set -o pipefail && xcodebuild \
            -project "$XCODE_PROJECT" \
            -scheme "$XCODE_SCHEME" \
            -configuration Debug \
            -destination 'generic/platform=iOS' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            COMPILER_INDEX_STORE_ENABLE=NO \
            ONLY_ACTIVE_ARCH=NO \
            -quiet \
            | tee build_logs/ios/xcodebuild.log
          
          BUILD_RESULT=$?
          
          if [ $BUILD_RESULT -ne 0 ]; then
            echo "--- Build Log (last 50 lines) ---"
            tail -n 50 build_logs/ios/xcodebuild.log
            echo "--- Available schemes ---"
            xcodebuild -project "$XCODE_PROJECT" -list
          else
            echo "âœ… iOS build successful"
          fi
          
          exit $BUILD_RESULT

      - name: Build Android
        script: |
          echo "--- Building Android ---"
          cd android
          chmod +x ./gradlew
          ./gradlew clean assembleDebug --stacktrace
          cd ..
          find android -name "*.apk" -exec ls -la {} \;

    artifacts:
      - build_logs/**/*
      - android/app/build/outputs/**/*.apk

    publishing:
      email:
        recipients:
          - webdev.faizanali@gmail.com
