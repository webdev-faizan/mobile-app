workflows:
  expo-ios-development:
    name: Expo iOS Development Build
    instance_type: mac_mini_m2
    working_directory: .
    environment:
      vars:
        BUILD_NUMBER: "1"
        # Add environment variables for React Native
        RCT_NO_LAUNCH_PACKAGER: true
        RCT_METRO_PORT: 8081
      node: 20
      java: 17

    cache:
      cache_paths:
        - node_modules
        - .yarn/cache
        - .yarn/install-state.gz
        - .yarn/unplugged
        # Remove Pods from cache since it's causing issues
        # - ios/Pods

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "master*"
          include: true
          source: true

    scripts:
      - name: Setup Environment
        script: |
          echo "--- System Info ---"
          sw_vers
          echo "--- Node version ---"
          node -v
          echo "--- Yarn version ---"
          yarn -v
          echo "--- Xcode version ---"
          xcodebuild -version
          echo "--- Ruby version ---"
          ruby -v
          echo "--- CocoaPods version ---"
          pod --version

      - name: Clean Workspace
        script: |
          echo "--- Cleaning previous builds ---"
          cd ios
          rm -rf Pods Podfile.lock build DerivedData
          cd ..

      - name: Install JavaScript Dependencies
        script: |
          echo "--- Installing Yarn dependencies ---"
          yarn install --network-timeout 600000 --ignore-engines

      - name: Install CocoaPods (with retries)
        script: |
          echo "--- Installing CocoaPods ---"
          cd ios
          # Force complete reinstall of pods
          pod deintegrate || true
          pod cache clean --all
          
          # Install with retries
          MAX_RETRIES=3
          for i in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $i of $MAX_RETRIES"
            if pod install --repo-update --clean-install; then
              echo "Pods installed successfully"
              break
            else
              echo "Pod install failed"
              if [ $i -eq $MAX_RETRIES ]; then
                echo "Max retries reached"
                exit 1
              fi
              sleep 5
            fi
          done
          
          # Verify critical files exist
          if [ ! -f "Pods/Target Support Files/Pods-simpleiostodo/Pods-simpleiostodo.debug.xcconfig" ]; then
            echo "Critical Pods files missing!"
            ls -la "Pods/Target Support Files/Pods-simpleiostodo/" || true
            exit 1
          fi
          cd ..

      - name: Fix React Native Script Phases
        script: |
          echo "--- Fixing React Native script phases ---"
          cd ios
          # Make script phases always run (removes warnings)
          perl -i -pe 's/baseConfigurationReference = .*?;/baseConfigurationReference = "";/g' simpleiostodo.xcodeproj/project.pbxproj
          perl -i -pe 's/alwaysOutOfDate = 0;/alwaysOutOfDate = 1;/g' simpleiostodo.xcodeproj/project.pbxproj
          cd ..

      - name: Build iOS App
        script: |
          echo "--- Building iOS App ---"
          cd ios
          set -o pipefail && xcodebuild \
            -project simpleiostodo.xcodeproj \
            -scheme simpleiostodo \
            -configuration Debug \
            -sdk iphonesimulator \
            -derivedDataPath build \
            -UseModernBuildSystem=YES \
            CODE_SIGNING_ALLOWED=NO \
            clean build | tee xcodebuild.log
          cd ..
          echo "--- Build Complete ---"

    artifacts:
      - ios/build/**/*
      - ios/xcodebuild.log
      - ios/Podfile.lock
      - ios/Pods/Manifest.lock

    publishing:
      email:
        recipients:
          - webdev.faizanali@gmail.com
      slack:
        channel: "#build-notifications"